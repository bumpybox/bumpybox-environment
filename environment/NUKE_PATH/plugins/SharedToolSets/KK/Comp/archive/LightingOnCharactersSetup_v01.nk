#! C:/Program Files/Nuke11.0v4/nuke-11.0.4.dll -nx
version 11.0 v4
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="0" y="0" w="2544" h="1361" screen="0">
        <splitter orientation="1">
            <split size="46"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1875" stretch="1"/>
            <splitter orientation="2">
                <split size="1317"/>
                <dock id="" activePageId="DAG.1" focus="true">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="615"/>
            <dock id="" activePageId="uk.co.thefoundry.scripteditor.1">
                <page id="Properties.1"/>
                <page id="uk.co.thefoundry.backgroundrenderview.1"/>
                <page id="uk.co.thefoundry.scripteditor.1"/>
            </dock>
        </splitter>
    </window>
    <window x="2554" y="1" w="1915" h="989" screen="1">
        <splitter orientation="2">
            <split size="989"/>
            <dock id="" activePageId="Viewer.1">
                <page id="Viewer.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name Y:/my_petsaurus/work/comp/plugins/SharedToolSets/KK/Comp/LightingOnCharactersSetup_v01.nk
 format "2048 1556 0 0 2048 1556 1 2K_Super_35(full-ap)"
 proxy_type scale
 proxy_format "1024 778 0 0 1024 778 1 1K_Super_35(full-ap)"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
}
BackdropNode {
 inputs 0
 name BackdropNode8
 knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
 tile_color 0x5b303001
 label "Lighting On Characters"
 note_font_size 50
 xpos -573
 ypos -394
 bdwidth 1163
 bdheight 1051
 addUserKnob {20 Settings}
 addUserKnob {43 text l Text}
 text "Lighting On Characters"
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
 addUserKnob {26 divider1 l "" +STARTLINE}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 michael l "<img src=\"michael.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[155,186,196],'michael',None)"}
 addUserKnob {22 kensuke l "<img src=\"kensuke.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[227,187,154],'kensuke',None)"}
 addUserKnob {22 dad l "<img src=\"dad.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[163,185,159],'dad',None)"}
 addUserKnob {22 mum l "<img src=\"mum.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[235,193,119],'mum',None)"}
 addUserKnob {22 becky l "<img src=\"becky.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[156,135,176],'becky',None)"}
 addUserKnob {22 stella l "<img src=\"stella.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[214,214,214],'stella',None)"}
 addUserKnob {22 parrot l "<img src=\"parrot.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[14,117,136],'parrot',None)"}
 addUserKnob {22 poacher l "<img src=\"poacher.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[103,84,52],'poacher',None)"}
 addUserKnob {26 divider2 l "" +STARTLINE}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
 addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.65, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.07, 0.6, 0.75]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.57, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {26 S08 l " " T " "}
 addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
 addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
 oz_border_width 2
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
 addUserKnob {26 S03 l " " -STARTLINE T "     "}
 addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
 addUserKnob {26 S04 l " " -STARTLINE T " "}
 addUserKnob {3 sides l "" -STARTLINE}
 sides 50
 addUserKnob {26 divider3 l "" +STARTLINE}
 addUserKnob {26 S05 l " " -STARTLINE T " "}
 addUserKnob {26 pos_text l Position -STARTLINE T " "}
 addUserKnob {3 node_position_x l x -STARTLINE}
 addUserKnob {3 node_position_y l y -STARTLINE}
 addUserKnob {26 S06 l " " T " "}
 addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
 sizeNode {0 0}
 addUserKnob {26 S07 l " " -STARTLINE T "     "}
 addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
Dot {
 inputs 0
 name Dot35
 label "Character Node Tree"
 xpos 514
 ypos -274
}
set N3c2d8700 [stack 0]
Dot {
 name Dot37
 xpos -509
 ypos -274
}
Dilate {
 size 6.5
 name Dilate1
 xpos -543
 ypos -212
 disable true
}
Dilate {
 size -6.5
 name Dilate2
 xpos -543
 ypos -174
 disable true
}
Dot {
 name Dot38
 xpos -509
 ypos -73
}
set N3c2d8a80 [stack 0]
Dot {
 name Dot39
 xpos -509
 ypos 425
}
set N3c2d9c00 [stack 0]
Blur {
 size 29.5
 name Blur8
 xpos -543
 ypos 458
}
Transform {
 translate {-9 18}
 center {1228 568}
 name Transform4
 xpos -543
 ypos 520
}
push $N3c2d9c00
Dot {
 name Dot40
 xpos -360
 ypos 425
}
Merge2 {
 inputs 2
 operation stencil
 name Merge32
 xpos -394
 ypos 520
}
Dot {
 name Dot1
 xpos -360
 ypos 611
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44c16000 x44220000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x41c80000 x41d80000 x41e80000}
        {{{x41b00000 0 1 0 1 257}}
	 {{x40800000 0 1 0 1 257}}}
        {{{x449534b4 0 1 x413e9740 1 257}
	  {x449730f2 0 1 0 1 257}
	  {x44971e1f xbee1e400 1 0 1 257}}
	 {{x44174b4c 0 1 xc263a5ac 1 257}
	  {x440452d3 0 1 0 1 257}
	  {x4401d2d3 xc0f00000 1 0 1 257}}}
        {{{xc1b00000 0 1 0 1 257}}
	 {{xc0800000 0 1 0 1 257}}}
        {{{0 0 1 x406fb680 1 257}
	  {x 2
	   {x409fcf00 0 1 0 1 257}}}
	 {{x41600000 0 1 xbf30d600 1 257}
	  {x 2
	   {x41514380 0 1 0 1 257}}}}
        {{{x4495a4b5 0 1 x40c5a6c0 1 257}
	  {x4496ac3e 0 1 0 1 257}
	  {x4495b78a xc0b78700 1 0 1 257}}
	 {{x4412f0f1 0 1 xc2520018 1 257}
	  {x440170ef 0 1 0 1 257}
	  {x43fd9692 xc0fe1e40 1 0 1 257}}}
        {{{0 0 1 xc0e787c0 1 257}
	  {x 2
	   {xc11a5a80 0 1 0 1 257}}}
	 {{xc1600000 0 1 xc1072d30 1 257}
	  {x 2
	   {xc1ca1e20 0 1 0 1 257}}}}
        {{{xc008d459 0 1 0 1 257}}
	 {{x4105ee86 0 1 0 1 257}}}
        {{{x4495b4b4 0 1 x400d2e80 1 257}
	  {x449612d3 0 1 0 1 257}
	  {x44960000 xbee1e400 1 0 1 257}}
	 {{x440bf696 0 1 xc2394b58 1 257}
	  {x43f90b48 0 1 0 1 257}
	  {x43f82967 xbfa968c0 1 0 1 257}}}
        {{{x4008d45e 0 1 0 1 257}}
	 {{xc105ee86 0 1 0 1 257}}}
        {{{x 2
	   {xc1d80000 0 1 0 1 257}}
	  {xc18aec80 x40e73a80 1 0 1 257}}
	 {{x 2
	   {xc1200000 0 1 0 1 257}}
	  {xc1b7bab0 xc11b9808 1 0 1 257}}}
        {{{x4495bf0e 0 1 x4045a600 1 257}
	  {x449642d2 0 1 0 1 257}
	  {x44958694 xc08d2e80 1 0 1 257}}
	 {{x44036969 0 1 xc216000c 1 257}
	  {x43edd2d0 0 1 0 1 257}
	  {x43ef9694 x40296980 1 0 1 257}}}
        {{{x 2
	   {x41d80000 0 1 0 1 257}}
	  {x41ae5b00 xc079de00 1 0 1 257}}
	 {{x 2
	   {x41200000 0 1 0 1 257}}
	  {x41e696c0 x4161e220 1 0 1 257}}}
        {{{1 0 1 0 1 257}}
	 {{xc1600000 0 1 0 1 257}}}
        {{{x44981a59 0 1 x41225a60 1 257}
	  {x4499cb4a 0 1 0 1 257}
	  {x4498c3c3 xc0c5a540 1 0 1 257}}
	 {{x440c5a5b 0 1 xc21ed2e8 1 257}
	  {x43fe3c3a 0 1 0 1 257}
	  {x43fffffe x40296980 1 0 1 257}}}
        {{{xbf800000 0 1 0 1 257}}
	 {{x41600000 0 1 0 1 257}}}
        {{{x40e00000 0 1 0 1 257}}
	 {{xc1200000 0 1 0 1 257}}}
        {{{x4497e000 0 1 x4045a600 1 257}
	  {x 2
	   {x449863c4 0 1 0 1 257}}}
	 {{x44138000 0 1 xc261e1f0 1 257}
	  {x 2
	   {x4400ad2c 0 1 0 1 257}}}}
        {{{xc0e00000 0 1 0 1 257}}
	 {{x41200000 0 1 0 1 257}}}}}
      {cc
       {f 8192}
       {px
        {x41c80000 x41d80000 x41e80000}
        {{{x41b00000 0 1 0 1 257}}
	 {{x40800000 0 1 0 1 257}}}
        {{{0 0 1 0 1 257}}
	 {{0 0 1 0 1 257}}}
        {{{xc1b00000 0 1 0 1 257}}
	 {{xc0800000 0 1 0 1 257}}}
        {{{0 0 1 x406fbb00 1 257}
	  {x 2
	   {x409fd200 0 1 0 1 257}}}
	 {{x41600000 0 1 xbf30d600 1 257}
	  {x 2
	   {x41514380 0 1 0 1 257}}}}
        {{{xc1700000 0 1 x3f3d6c00 1 257}
	  {x 2
	   {xc1603700 0 1 0 1 257}}}
	 {{0 0 1 x40806b80 1 257}
	  {x 2
	   {x40ab3a00 0 1 0 1 257}}}}
        {{{0 0 1 xc0e78700 1 257}
	  {x 2
	   {xc11a5a00 0 1 0 1 257}}}
	 {{xc1600000 0 1 xc1072ca0 1 257}
	  {x 2
	   {xc1ca1dc0 0 1 0 1 257}}}}
        {{{xc008d459 0 1 0 1 257}}
	 {{x4105ee86 0 1 0 1 257}}}
        {{{xc19b0600 0 1 0 1 257}}
	 {{xc09e5e00 0 1 0 1 257}}}
        {{{x4008d45e 0 1 0 1 257}}
	 {{xc105ee86 0 1 0 1 257}}}
        {{{x 2
	   {xc1d80000 0 1 0 1 257}}
	  {xc18aec80 x40e73a80 1 0 1 257}}
	 {{x 2
	   {xc1200000 0 1 0 1 257}}
	  {xc1b7bab0 xc11b9808 1 0 1 257}}}
        {{{0 0 1 0 1 257}}
	 {{0 0 1 0 1 257}}}
        {{{x 2
	   {x41d80000 0 1 0 1 257}}
	  {x41ae5b00 xc079de00 1 0 1 257}}
	 {{x 2
	   {x41200000 0 1 0 1 257}}
	  {x41e696c0 x4161e220 1 0 1 257}}}
        {{{1 0 1 0 1 257}}
	 {{xc1600000 0 1 0 1 257}}}
        {{{0 0 1 0 1 257}}
	 {{0 0 1 0 1 257}}}
        {{{xbf800000 0 1 0 1 257}}
	 {{x41600000 0 1 0 1 257}}}
        {{{x40e00000 0 1 0 1 257}}
	 {{xc1200000 0 1 0 1 257}}}
        {{{0 0 1 0 1 257}}
	 {{0 0 1 0 1 257}}}
        {{{xc0e00000 0 1 0 1 257}}
	 {{x41200000 0 1 0 1 257}}}}}}
     {tx x41c80000 x4494d555 x440b9555}
     {a opc x3ea3d70a osw x41200000 osf 0 str 1 spx x44c16000 spy x44220000 sb 1 ltn x41c80000 ltm x41f00000 ltt x40800000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1547 648}
 colorOverlay {0 0 0 0}
 opacity 0.3199999928
 lifetime_type "frame range"
 lifetime_start 25
 lifetime_end 30
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto10
 xpos -264
 ypos -7
}
push $N3c2d8a80
Emboss {
 Angle 26
 Width 11.1
 name Emboss1
 xpos -404
 ypos -83
}
Shuffle {
 red alpha
 green alpha
 blue alpha
 name Shuffle2
 xpos -404
 ypos -27
}
Grade {
 blackpoint 0.58
 name Grade1
 xpos -404
 ypos 20
}
Shuffle {
 alpha blue
 name Shuffle3
 xpos -404
 ypos 104
}
Merge2 {
 inputs 2
 name Merge33
 xpos -264
 ypos 104
 disable true
}
Constant {
 inputs 0
 color {0.8115249872 0.6525416374 0.2367494404 1}
 name Constant1
 xpos -121
 ypos -34
}
ColorCorrect {
 gain 1.36
 name ColorCorrect9
 xpos -121
 ypos 38
}
Merge2 {
 inputs 2
 operation mask
 name Merge31
 xpos -121
 ypos 104
}
set N3c379180 [stack 0]
Dot {
 name Dot41
 xpos -87
 ypos 312
}
Roto {
 inputs 0
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44c16000 x44220000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x42000000
        {x43960000 x42580000}
        {x45108000 x44210000}
        {xc3960000 xc2580000}
        {x439d0000 x41d00000}
        {x44d84000 x43fa0000}
        {xc39d0000 xc1d00000}
        {x43300000 x42480000}
        {x44958000 x43db0000}
        {xc3300000 xc2480000}
        {x42a80000 x42680000}
        {x44468000 x43850000}
        {xc2a80000 xc2680000}
        {xc3100000 x42500000}
        {x44298000 xc2c00000}
        {x43100000 xc2500000}
        {xc3af0000 xc1d00000}
        {x44c40000 xc38f0000}
        {x43af0000 x41d00000}
        {xc2d40000 xc1800000}
        {x452ba000 xc3080000}
        {x42d40000 x41800000}
        {xc1600000 xc3120000}
        {x45418000 xc2780000}
        {x41600000 x43120000}
        {x428c0000 xc2a80000}
        {x45420000 x43ea0000}
        {xc28c0000 x42a80000}}}     idem}
     {tx x42000000 x44ef38e4 x4340e38e}
     {a osw x41200000 osf 0 str 1 spx x44c16000 spy x44220000 sb 1 ltn x42000000 ltm x42000000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {1547 648}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 32
 lifetime_end 32
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto9
 xpos 139
 ypos 44
}
Noise {
 inputs 0
 size 25
 zoffset 0.3157894743
 lacunarity 3.95
 gain 0.595
 gamma 0.115
 center {1289 540}
 name Noise1
 xpos 29
 ypos -228
}
Grade {
 blackpoint 0.01
 whitepoint 0.04
 white_clamp true
 name Grade2
 xpos 29
 ypos -141
 disable true
}
Shuffle {
 alpha blue
 name Shuffle6
 xpos 29
 ypos -115
}
Grade {
 channels all
 whitepoint 0.014
 white_clamp true
 name Grade4
 xpos 29
 ypos -61
}
Blur {
 size 4
 name Blur10
 xpos 29
 ypos -23
}
Merge2 {
 inputs 2
 name Merge37
 xpos 29
 ypos 50
}
push $N3c379180
Merge2 {
 inputs 2
 operation stencil
 name Merge34
 xpos 29
 ypos 104
}
Blur {
 size {{curve K x22 7.6 8.042857146 x25 8.928571435 9.814285724 10.70000001 11.5857143 x32 12.02857144 12.47142858 x35 13.35714286 x36 16}}
 name Blur9
 xpos 219
 ypos 98
}
push $N3c2d8700
Dot {
 name Dot42
 xpos 514
 ypos 2
}
Merge2 {
 inputs 2
 operation plus
 maskChannelInput rgba.alpha
 mix {{curve x36 0.535 0.09 0}}
 name Merge35
 label HIGHLIGHT
 xpos 480
 ypos 91
}
ColorCorrect {
 inputs 1+1
 name ColorCorrect8
 xpos 480
 ypos 308
 disable true
}
ColorCorrect {
 inputs 1+1
 gamma 0.37
 gain 0.51
 name ColorCorrect7
 label Shadow
 xpos 480
 ypos 601
}
Dot {
 name Dot46
 label Out
 xpos 514
 ypos 700
}

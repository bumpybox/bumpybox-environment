#! C:/Program Files/Nuke11.0v4/nuke-11.0.4.dll -nx
version 11.0 v4
define_window_layout_xml {<?xml version="1.0" encoding="UTF-8"?>
<layout version="1.0">
    <window x="-8" y="-8" w="1920" h="1027" maximized="1" screen="0">
        <splitter orientation="1">
            <split size="40"/>
            <dock id="" hideTitles="1" activePageId="Toolbar.1">
                <page id="Toolbar.1"/>
            </dock>
            <split size="1153" stretch="1"/>
            <splitter orientation="2">
                <split size="983"/>
                <dock id="" activePageId="DAG.1" focus="true">
                    <page id="DAG.1"/>
                    <page id="Curve Editor.1"/>
                    <page id="DopeSheet.1"/>
                </dock>
            </splitter>
            <split size="719"/>
            <dock id="" activePageId="Properties.1">
                <page id="Properties.1"/>
                <page id="com.adrianpueyo.KnobScripterPane"/>
                <page id="W_scaleTree.widget"/>
            </dock>
        </splitter>
    </window>
    <window x="1912" y="0" w="1920" h="1057" maximized="1" screen="1">
        <splitter orientation="2">
            <split size="1057"/>
            <dock id="" activePageId="Viewer.1">
                <page id="Viewer.1"/>
            </dock>
        </splitter>
    </window>
</layout>
}
Root {
 inputs 0
 name "G:/My Drive/library/Nuke/plugins/SharedToolSets/Ghosts/edgeblur_ghosts.nk"
 lock_range true
 fps 25
 format "1920 1080 0 0 1920 1080 1 ghosts"
 colorManagement Nuke
 workingSpaceLUT linear
 monitorLut sRGB
 int8Lut sRGB
 int16Lut sRGB
 logLut Cineon
 floatLut linear
 addUserKnob {20 AvalonTab}
 addUserKnob {20 begin l "Avalon data group" n 2}
 addUserKnob {26 __divider__ l "" +STARTLINE}
 addUserKnob {26 avalon_data -STARTLINE T "Warning! Do not change following data!"}
 addUserKnob {26 avalon:handleEnd l handleEnd T 0}
 addUserKnob {26 avalon:handleStart l handleStart T 0}
 addUserKnob {20 end l "Avalon data group" n -1}
 addUserKnob {26 ""}
 addUserKnob {6 publish l Publish +STARTLINE}
}
BackdropNode {
 inputs 0
 name edgeblur_backdrop_0
 knobChanged "try:\n    node=nuke.thisNode()\n    knob=nuke.thisKnob()\n    name=knob.name()\n\n    def updateKnobs():\n        nodeWidth=node\['bdwidth'].getValue()\n        nodeHeight=node\['bdheight'].getValue()\n        node\['sizeNode'].setValue(\[int(nodeWidth),int(nodeHeight)])\n        node\['node_position_x'].setValue(int(node\['xpos'].value()))\n        node\['node_position_y'].setValue(int(node\['ypos'].value()))\n        node\['zorder'].setValue(int(node\['z_order'].getValue()))\n        node\['font_size'].setValue(int(node\['note_font_size'].getValue()))\n        node\['oz_appearance'].setValue( node\['appearance'].value() )\n        node\['oz_border_width'].setValue( node\['border_width'].value() )\n        #node\['fontColor'].setValue(int(node\['note_font_color'].getValue()))\n\n    def updateLabelKnob():\n        curLabel = node\['label'].getValue()\n        if '<p align=center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=center>', ''))\n            node\['alignment'].setValue(1)\n        elif '<p align=right>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<p align=right>', ''))\n            node\['alignment'].setValue(2)\n        elif '<center>' in curLabel:\n            node\['text'].setValue(curLabel.replace('<center>', ''))\n            node\['alignment'].setValue(1)\n        else:\n            node\['text'].setValue(curLabel)\n            node\['alignment'].setValue(0)\n\n    ### OPENING SETUP\n    if name=='showPanel':\n        updateKnobs()\n        updateLabelKnob()\n\n    ### UPDATE STYLE\n    if name in \['oz_appearance', 'oz_border_width']:\n        node\['appearance'].setValue( node\['oz_appearance'].value() )\n        node\['border_width'].setValue( node\['oz_border_width'].value() )\n\n    ### CHANGE THE SIZE OF THE NODE\n    if name=='sizeNode':\n        node\['bdwidth'].setValue(int(node\['sizeNode'].getValue()\[0]))\n        node\['bdheight'].setValue(int(node\['sizeNode'].getValue()\[1]))\n\n    ### POSITION\n    if name=='node_position_x' or name=='node_position_y':\n        node.setXYpos(int(node\['node_position_x'].getValue()),int(node\['node_position_y'].getValue()))\n\n    ### ZORDER\n    if name=='zorder':\n        node\['z_order'].setValue(node\['zorder'].getValue())\n\n    ### UPDATE THE 'CURRENT SIZE' AND ORDER\n    #if name=='bdwidth' or name=='bdheight' or name=='z_order':\n    if name in \['bdwidth', 'bdheight', 'z_order']:\n        updateKnobs()\n\n    ### UPDATE LABEL\n    title = node\['name'].value()\n    text = node\['text'].value()\n\n    if name in \['text', 'alignment', 'title']:\n        if text=='':\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+title\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+title\n            else:\n                newLabel=title\n        else:\n            if node\['alignment'].getValue()==1:\n                newLabel='<p align=center>'+text\n            elif node\['alignment'].getValue()==2:\n                newLabel='<p align=right>'+text\n            else:\n                newLabel=text\n\n        node\['label'].setValue(newLabel)\n\n    if name==\"font_size\":\n        new_font_size = node\[\"font_size\"].value()\n        node\['note_font_size'].setValue(new_font_size)\n\n    del newLabel\n\nexcept:\n    pass\n"
 tile_color 0x322d30ff
 label "blur edges"
 note_font_size 50
 xpos 679
 ypos 3157
 bdwidth 623
 bdheight 598
 addUserKnob {20 Settings}
 addUserKnob {43 text l Text}
 text "blur edges"
 addUserKnob {7 font_size l "Font Size" R 10 100}
 font_size 50
 addUserKnob {4 alignment l "" -STARTLINE M {left center right}}
 addUserKnob {26 divider1 l "" +STARTLINE}
 addUserKnob {26 S01 l " " T " "}
 addUserKnob {22 michael l "<img src=\"michael.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[155,186,196],'michael',None)"}
 addUserKnob {22 kensuke l "<img src=\"kensuke.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[227,187,154],'kensuke',None)"}
 addUserKnob {22 dad l "<img src=\"dad.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[163,185,159],'dad',None)"}
 addUserKnob {22 mum l "<img src=\"mum.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[235,193,119],'mum',None)"}
 addUserKnob {22 becky l "<img src=\"becky.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[156,135,176],'becky',None)"}
 addUserKnob {22 stella l "<img src=\"stella.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[214,214,214],'stella',None)"}
 addUserKnob {22 parrot l "<img src=\"parrot.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[14,117,136],'parrot',None)"}
 addUserKnob {22 poacher l "<img src=\"poacher.png\">" -STARTLINE T "import oz_backdrop\noz_backdrop.setCharacter(\[103,84,52],'poacher',None)"}
 addUserKnob {26 divider2 l "" +STARTLINE}
 addUserKnob {22 colorandom l " <img src=\"ColorBars.png\">" -STARTLINE T "import random\nn=nuke.thisNode()\nr,g,b=\[(float(random.randint( 20, 40)))/100,(float(random.randint( 10, 50)))/100,(float(random.randint( 15, 60)))/100]\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (r*255,g*255,b*255,1),16) )\n"}
 addUserKnob {22 red l " <img src=\"F_r.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.0, 0.65, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 orange l " <img src=\"F_o.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.07, 0.6, 0.75]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 yellow l " <img src=\"F_y.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.16, 0.57, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 green l " <img src=\"F_g.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.33, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 cyan l " <img src=\"F_c.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.46, 0.8, 0.7]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 blue l " <img src=\"F_b.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.6, 0.7, 0.76]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 darkblue l " <img src=\"F_db.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.67, 0.74, 0.6]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 magenta l " <img src=\"F_m.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.8, 0.74, 0.65]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {22 pink l " <img src=\"F_p.png\">" -STARTLINE T "import colorsys\nn=nuke.thisNode()\nR,G,B= \[0.92, 0.74, 0.8]\nR,G,B=colorsys.hsv_to_rgb(R,G,B)\nn\['tile_color'].setValue( int('%02x%02x%02x%02x' % (R*255,G*255,B*255,255), 16 ))\n"}
 addUserKnob {26 S08 l " " T " "}
 addUserKnob {4 oz_appearance l appearance -STARTLINE M {Fill Border}}
 addUserKnob {7 oz_border_width l width -STARTLINE R 0 10}
 oz_border_width 2
 addUserKnob {26 S02 l " " T " "}
 addUserKnob {22 grow l " <img src=\"F_scalep.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef grow(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()-step)\n            n\['ypos'].setValue(n\['ypos'].getValue()-step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()+step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()+step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\ngrow(n,50)"}
 addUserKnob {22 shrink l " <img src=\"F_scalem.png\">" -STARTLINE T "n=nuke.thisNode()\n\ndef shrink(node=None,step=50):\n    try:\n        if not node:\n            n=nuke.selectedNode()\n        else:\n            n=node\n            n\['xpos'].setValue(n\['xpos'].getValue()+step)\n            n\['ypos'].setValue(n\['ypos'].getValue()+step)\n            n\['bdwidth'].setValue(n\['bdwidth'].getValue()-step*2)\n            n\['bdheight'].setValue(n\['bdheight'].getValue()-step*2)\n    except Exception,e:\n        print('Error:: %s' % e)\n\nshrink(n,50)"}
 addUserKnob {26 S03 l " " -STARTLINE T "     "}
 addUserKnob {22 encompassSelectedNodes l " <img src=\"oz_encompass.png\">" -STARTLINE T "this = nuke.thisNode()\npadding = this\['sides'].getValue()\nif this.isSelected:\n    this.setSelected(False)\nselNodes = nuke.selectedNodes()\n        \ndef nodeIsInside (node, backdropNode):\n    # Returns true if node geometry is inside backdropNode otherwise returns false\n    topLeftNode = \[node.xpos(), node.ypos()]\n    topLeftBackDrop = \[backdropNode.xpos(), backdropNode.ypos()]\n    bottomRightNode = \[node.xpos() + node.screenWidth(), node.ypos() + node.screenHeight()]\n    bottomRightBackdrop = \[backdropNode.xpos() + backdropNode.screenWidth(), backdropNode.ypos() + backdropNode.screenHeight()]\n                    \n    topLeft = ( topLeftNode\[0] >= topLeftBackDrop\[0] ) and ( topLeftNode\[1] >= topLeftBackDrop\[1] )\n    bottomRight = ( bottomRightNode\[0] <= bottomRightBackdrop\[0] ) and ( bottomRightNode\[1] <= bottomRightBackdrop\[1] )\n                    \n    return topLeft and bottomRight\n\nif not selNodes:\n    nuke.message('Some nodes should be selected')\nelse:\n    # Calculate bounds for the backdrop node.\n    bdX = min(\[node.xpos() for node in selNodes])\n    bdY = min(\[node.ypos() for node in selNodes])\n    bdW = max(\[node.xpos() + node.screenWidth() for node in selNodes]) - bdX\n    bdH = max(\[node.ypos() + node.screenHeight() for node in selNodes]) - bdY\n                        \n    zOrder = 0\n    selectedBackdropNodes = nuke.selectedNodes( \"BackdropNode\" )\n\n    #if there are backdropNodes selected put the new one immediately behind the farthest one\n                \n    if len( selectedBackdropNodes ):\n        zOrder = min( \[node.knob( \"z_order\" ).value() for node in selectedBackdropNodes] ) - 1\n    else :\n        #otherwise (no backdrop in selection) find the nearest backdrop if exists and set the new one in front of it\n        nonSelectedBackdropNodes = nuke.allNodes(\"BackdropNode\")\n        for nonBackdrop in selNodes:\n            for backdrop in nonSelectedBackdropNodes:\n                if nodeIsInside( nonBackdrop, backdrop ):\n                    zOrder = max( zOrder, backdrop.knob( \"z_order\" ).value() + 1 )\n    \n    # Expand the bounds to leave a little border. Elements are offsets for left, top, right and bottom edges respectively\n    left, top, right, bottom = (-padding, -(padding+70), padding, padding)\n    bdX += left\n    bdY += top\n    bdW += (right - left)\n    bdH += (bottom - top)\n\n    this\['xpos'].setValue(bdX)\n    this\['bdwidth'].setValue(bdW)\n    this\['ypos'].setValue(bdY)\n    this\['bdheight'].setValue(bdH)\n    this\['z_order'].setValue(zOrder)\n"}
 addUserKnob {26 S04 l " " -STARTLINE T " "}
 addUserKnob {3 sides l "" -STARTLINE}
 sides 50
 addUserKnob {26 divider3 l "" +STARTLINE}
 addUserKnob {26 S05 l " " -STARTLINE T " "}
 addUserKnob {26 pos_text l Position -STARTLINE T " "}
 addUserKnob {3 node_position_x l x -STARTLINE}
 node_position_x 679
 addUserKnob {3 node_position_y l y -STARTLINE}
 node_position_y 3157
 addUserKnob {26 S06 l " " T " "}
 addUserKnob {14 sizeNode l Size -STARTLINE R 0 100}
 sizeNode {623 598}
 addUserKnob {26 S07 l " " -STARTLINE T "     "}
 addUserKnob {3 zorder l "Z Order" -STARTLINE}
}
Dot {
 inputs 0
 name edgeblur_input_0
 label "\[value name]"
 xpos 1094
 ypos 3066
}
Dot {
 name Dot179
 xpos 1094
 ypos 3258
}
set N712d0e00 [stack 0]
Dot {
 name Dot181
 xpos 984
 ypos 3258
}
set N712d0a80 [stack 0]
add_layer {body body.skin body.hair body.beard body.alpha}
Shuffle {
 in body
 red alpha
 out alpha
 name Shuffle85
 label "\[value in] -> \[value out]"
 xpos 950
 ypos 3296
}
Dilate {
 channels alpha
 size 1.8
 name Dilate28
 xpos 950
 ypos 3392
}
Blur {
 channels alpha
 size 3.9
 name Blur13
 xpos 950
 ypos 3440
}
Dot {
 name Dot537
 xpos 984
 ypos 3498
}
push $N712d0a80
Dot {
 name Dot180
 xpos 874
 ypos 3258
}
add_layer {silhouette silhouette.alpha}
Shuffle {
 in silhouette
 red alpha
 out alpha
 name Shuffle1
 label "\[value in] -> \[value out]"
 xpos 840
 ypos 3296
}
Group {
 name EdgeDetectPRO6
 tile_color 0xcc804e00
 xpos 840
 ypos 3398
 addUserKnob {20 EdgeDetect}
 addUserKnob {41 channels T CTRL.channels}
 addUserKnob {26 IN l "" +STARTLINE T "<b><font color=\"SandyBrown\">IN</font></b>"}
 addUserKnob {26 line l "" -STARTLINE}
 addUserKnob {7 in_erode l "IN erode" R -100 100}
 in_erode 7.5
 addUserKnob {7 in_blur l "IN blur" R 0 50}
 addUserKnob {26 OUT l "" +STARTLINE T "<b><font color=\"SandyBrown\">OUT</font></b>"}
 addUserKnob {26 line2 l "" -STARTLINE}
 addUserKnob {7 out_erode l "OUT erode" R -100 100}
 out_erode -6
 addUserKnob {7 out_blur l "OUT blur" R 0 50}
 addUserKnob {26 OVERALL l "" +STARTLINE T "<b><font color=\"SandyBrown\">OVERALL</font></b>"}
 addUserKnob {26 line03 l "" -STARTLINE}
 addUserKnob {41 size l Dilate T Dilate1.size}
 addUserKnob {41 size_1 l Blur T BlurOverall.size}
 addUserKnob {41 value l Gain T MultiplyOverall.value}
 addUserKnob {6 clamp -STARTLINE}
 clamp true
 addUserKnob {26 ""}
 addUserKnob {6 enableRotate l "" +STARTLINE +STARTLINE}
 addUserKnob {41 which l rotate -STARTLINE T Switch1.which}
 addUserKnob {26 ""}
 addUserKnob {20 filters l Filters n 1}
 filters 0
 addUserKnob {41 filter l "filter erode" T FilterErodeIN.filter}
 addUserKnob {41 filter_1 l "filter blur" T BlurIN.filter}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 email l @}
 addUserKnob {26 email_1 l "" +STARTLINE T "<b><font color=\"SandyBrown\">EdgeDetect PRO v2.0</font></b><br>\n<font size=“1”><i>by Andrea Geremia</i><br>\n<br>\nandrea.geremia89@gmail.com<br>\nwww.andreageremia.it</font>"}
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x56705aff
  label rotate
  note_font_size 42
  xpos -2496
  ypos -223
  bdwidth 2029
  bdheight 509
 }
 Input {
  inputs 0
  name Input1
  xpos 149
  ypos -285
 }
 Dilate {
  channels {{{parent.CTRL.channels}}}
  name Dilate1
  label "\[value size]"
  xpos 147
  ypos -234
 }
 Dot {
  name Dot4
  xpos 181
  ypos -143
 }
set N712fbc00 [stack 0]
 Dot {
  name Dot21
  xpos -176
  ypos -143
 }
set N712fb880 [stack 0]
 Dot {
  name Dot16
  xpos -525
  ypos -143
 }
set N712fb500 [stack 0]
 Matrix {
  matrix {
      {0 1 1}
      {-1 0 1}
      {-1 -1 0}
    }
  name Matrix15
  xpos -557
  ypos -29
 }
push $N712fb500
 Dot {
  name Dot5
  xpos -658
  ypos -143
 }
set N71325500 [stack 0]
 Matrix {
  matrix {
      {1 1 1}
      {-1 0 1}
      {-1 -1 -1}
    }
  name Matrix14
  xpos -690
  ypos -31
 }
push $N71325500
 Dot {
  name Dot14
  xpos -788
  ypos -143
 }
set N71324e00 [stack 0]
 Matrix {
  matrix {
      {1 1 1}
      {0 0 0}
      {-1 -1 -1}
    }
  name Matrix13
  xpos -820
  ypos -29
 }
push $N71324e00
 Dot {
  name Dot13
  xpos -934
  ypos -143
 }
set N71324700 [stack 0]
 Matrix {
  matrix {
      {1 1 1}
      {1 0 -1}
      {-1 -1 -1}
    }
  name Matrix12
  xpos -966
  ypos -29
 }
push $N71324700
 Dot {
  name Dot12
  xpos -1068
  ypos -143
 }
set N71324000 [stack 0]
 Matrix {
  matrix {
      {1 1 0}
      {1 0 -1}
      {0 -1 -1}
    }
  name Matrix11
  xpos -1100
  ypos -31
 }
push $N71324000
 Dot {
  name Dot11
  xpos -1219
  ypos -143
 }
set N71325880 [stack 0]
 Matrix {
  matrix {
      {1 1 -1}
      {0 0 0}
      {1 -1 -1}
    }
  name Matrix10
  xpos -1251
  ypos -32
 }
push $N71325880
 Dot {
  name Dot10
  xpos -1351
  ypos -143
 }
set N71349880 [stack 0]
 Matrix {
  matrix {
      {1 1 -1}
      {1 0 -1}
      {1 -1 -1}
    }
  name Matrix9
  xpos -1385
  ypos -34
 }
push $N71349880
 Dot {
  name Dot9
  xpos -1500
  ypos -143
 }
set N71349180 [stack 0]
 Matrix {
  matrix {
      {1 0 -1}
      {1 0 -1}
      {1 0 -1}
    }
  name Matrix8
  xpos -1534
  ypos -31
 }
push $N71349180
 Dot {
  name Dot8
  xpos -1640
  ypos -143
 }
set N71348a80 [stack 0]
 Matrix {
  matrix {
      {1 -1 -1}
      {1 0 -1}
      {1 1 -1}
    }
  name Matrix7
  xpos -1674
  ypos -31
 }
push $N71348a80
 Dot {
  name Dot15
  xpos -1745
  ypos -143
 }
set N71348380 [stack 0]
 Matrix {
  matrix {
      {0 -1 -1}
      {1 0 -1}
      {1 1 0}
    }
  name Matrix6
  xpos -1779
  ypos -32
 }
push $N71348380
 Dot {
  name Dot7
  xpos -1851
  ypos -143
 }
set N49d5c00 [stack 0]
 Matrix {
  matrix {
      {-1 -1 -1}
      {1 0 -1}
      {1 1 1}
    }
  name Matrix5
  xpos -1885
  ypos -31
 }
push $N49d5c00
 Dot {
  name Dot6
  xpos -1961
  ypos -143
 }
set N49d5500 [stack 0]
 Matrix {
  matrix {
      {-1 -1 -1}
      {0 0 0}
      {1 1 1}
    }
  name Matrix4
  xpos -1995
  ypos -32
 }
push $N49d5500
 Dot {
  name Dot17
  xpos -2082
  ypos -143
 }
set N49d4e00 [stack 0]
 Matrix {
  matrix {
      {-1 -1 -1}
      {-1 0 1}
      {1 1 1}
    }
  name Matrix3
  xpos -2116
  ypos -32
 }
push $N49d4e00
 Dot {
  name Dot18
  xpos -2203
  ypos -143
 }
set N49d4700 [stack 0]
 Matrix {
  matrix {
      {-1 -1 0}
      {-1 0 1}
      {0 1 1}
    }
  name Matrix2
  xpos -2237
  ypos -31
 }
push $N49d4700
 Dot {
  name Dot19
  xpos -2319
  ypos -143
 }
set N49d4000 [stack 0]
 Matrix {
  matrix {
      {-1 -1 1}
      {-1 0 1}
      {-1 1 1}
    }
  name Matrix1
  xpos -2353
  ypos -31
 }
push $N49d4000
 Dot {
  name Dot20
  xpos -2452
  ypos -143
 }
 Matrix {
  matrix {
      {-1 0 1}
      {-1 0 1}
      {-1 0 1}
    }
  name Matrix0
  xpos -2486
  ypos -31
 }
 Switch {
  inputs 16
  name Switch1
  xpos -1534
  ypos 258
 }
push $N712fb880
 Matrix {
  channels {{{parent.CTRL.channels}}}
  matrix {
      {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(0,0)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(0,1)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(0,2)]"}}
      {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(1,0)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(1,1)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(1,2)]"}}
      {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(2,0)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(2,1)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(2,2)]"}}
    }
  name MatrixSUPER
  xpos -208
  ypos 68
 }
 FilterErode {
  channels {{{parent.CTRL.channels}}}
  size {{(abs(parent.FilterErodeOUT.size)+abs(parent.FilterErodeIN.size)+parent.BlurOUT.size+parent.BlurIN.size+10)*-1}}
  name FilterErode1
  label "\[value size]"
  xpos -208
  ypos 215
 }
push $N712fbc00
 Dot {
  name Dot2
  label IN
  note_font_size 30
  xpos 239
  ypos -96
 }
 FilterErode {
  channels {{{parent.CTRL.channels}}}
  size {{parent.in_erode}}
  name FilterErodeIN
  label "\[value size]"
  xpos 205
  ypos -44
 }
 Blur {
  channels {{{parent.CTRL.channels}}}
  size {{parent.in_blur}}
  name BlurIN
  label "\[value size]"
  selected true
  xpos 205
  ypos 14
 }
 Dot {
  name Dot3
  xpos 239
  ypos 169
 }
push $N712fbc00
 Dot {
  name Dot1
  label OUT
  note_font_size 30
  xpos 106
  ypos -93
 }
 FilterErode {
  channels {{{parent.CTRL.channels}}}
  size {{parent.out_erode}}
  filter {{FilterErodeIN.filter}}
  name FilterErodeOUT
  label "\[value size]"
  xpos 72
  ypos -39
 }
 Blur {
  channels {{{parent.CTRL.channels}}}
  size {{parent.out_blur}}
  filter {{BlurIN.filter}}
  name BlurOUT
  label "\[value size]"
  xpos 72
  ypos 15
 }
 Merge2 {
  inputs 2
  operation stencil
  name Merge1
  xpos 72
  ypos 166
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge2
  label ROTATE
  xpos 72
  ypos 215
  disable {{!parent.enableRotate}}
 }
 Blur {
  channels {{{parent.CTRL.channels}}}
  name BlurOverall
  label "\[value size]"
  xpos 72
  ypos 286
 }
 Multiply {
  channels {{{parent.CTRL.channels}}}
  name MultiplyOverall
  label "\[value value]"
  xpos 72
  ypos 340
 }
 Clamp {
  channels {{{parent.CTRL.channels}}}
  name Clamp1
  xpos 72
  ypos 383
  disable {{!parent.clamp}}
 }
 Output {
  name Output1
  xpos 72
  ypos 432
 }
 FilterErode {
  inputs 0
  channels rgba
  size 0
  name CTRL
  label "\[value size]"
  xpos 385
  ypos -166
 }
end_group
Merge2 {
 inputs 2
 operation mask
 Achannels {rgba.alpha none none rgba.alpha}
 name Merge256
 label "\[value Achannels] -> \[value Bchannels]"
 xpos 840
 ypos 3488
}
Dot {
 name Dot538
 xpos 874
 ypos 3594
}
set N4a63180 [stack 0]
Dot {
 name Dot539
 xpos 874
 ypos 3690
}
push $N4a63180
push $N712d0e00
EdgeBlur {
 inputs 1+1
 channels rgba
 name EdgeBlur24
 label "\[value channels]"
 xpos 1060
 ypos 3577
}
add_layer {specular specular.red specular.green specular.blue specular.alpha}
EdgeBlur {
 inputs 1+1
 channels specular
 name EdgeBlur25
 label "\[value channels]"
 xpos 1060
 ypos 3673
}
Dot {
 name edgeblur_output_0
 label "\[value name]"
 xpos 1094
 ypos 3786
}

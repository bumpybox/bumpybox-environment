set cut_paste_input [stack 0]
version 11.0 v4
push $cut_paste_input
NoOp {
 name scripts
 tile_color 0xff00ff
 gl_color 0xff00ff
 selected true
 xpos 10136
 ypos 329
 addUserKnob {20 User}
 addUserKnob {22 formatTimestamps l "Format Timestamps" t "The timestamps input will move from the read node to a dot node underneath the master. Anyting put before the dot will affect all connected shots.\n\nThe burnin and timeclips have been move down out of the way." T "import nuke\nimport csv\nimport colorsys\n\ndef getIndexColor(i, n):\n    # set colour hue based on index and number of shots\n    h = float(100 / n * i)/100\n    s = 0.645\n    v = 0.75\n    rgb = colorsys.hsv_to_rgb(h, s, v)\n\n    r = rgb\[0]\n    g = rgb\[1]\n    b = rgb\[2]\n    a = 1\n    color = int('%02x%02x%02x%02x' % (r*255,g*255,b*255,a*255),16)\n    return color\n\nreads = \[]\n\nfor node in nuke.allNodes():\n    #move nodes down\n    if node.Class() == 'BurnIn' or node.Class() == 'TimeClip':\n        y = node.ypos()\n        node.setYpos(y + 500)\n        \n    #get all read nodes\n    if node.Class() == 'Read':\n        if len(node.dependent()) > 1:\n            reads.append(node)\n\n        \n#loop through read nodes\nfor index, read in enumerate(reads):\n    \n    #get all dependednts for each read node\n    readDeps = read.dependent()\n    #loop through each read nodes dependents\n    BI = False\n    stamps = \[]\n    stampNames = \[]\n    #check read has postage stamp deps\n    if len(readDeps) > 1:\n        #get colour for read\n        color = getIndexColor(index, len(reads))\n        read.knob('tile_color').setValue(color)\n        \n        for dep in readDeps: \n            if dep.Class() == 'ModifyMetaData':\n                #get read burnin node\n                BI = dep.dependent()\[0].dependent()\[0]\n            if dep.Class() == 'PostageStamp':\n                #get all timestamps for read\n                stamps.append(dep)\n                stampMeta = dep.dependent()\[0].dependent()\[0]\n                stampShot = stampMeta.metadata().get('hiero/shot')\n                stampNames.append('<br/>' + stampShot)\n                \n        \n        #set each stamp to the burnin for the read\n        if BI.Class() == 'BurnIn':\n            BIinput = BI.input(0)\n            #create dot above BI\n            BIinputY = BIinput.ypos()\n            BIinputX = BIinput.xpos()\n            \n            dot = nuke.createNode('Dot')\n            dot\['selected'].setValue(False)\n            dot.setYpos(BIinputY + 300)\n            dot.setXpos(BIinputX + 34)\n            dot.setInput(0, BIinput)\n            #set names of deps\n            dot\['label'].setValue(' Source For:' + ''.join(stampNames))\n            \n            BI.setInput(0, dot)\n            #changes stamp input to new dot\n            for stamp in stamps:\n                stamp.setInput(0, dot)\n                BIshot = BI.metadata().get('hiero/shot')\n                #set stamp source name\n                stamp\['label'].setValue('Source: ' + BIshot)\n                #set color\n                stamp.knob('tile_color').setValue(color)\n                \n" +STARTLINE}
}
